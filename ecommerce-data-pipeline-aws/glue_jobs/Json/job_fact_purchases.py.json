{
	"jobConfig": {
		"name": "job_fact_purchases.py",
		"description": "",
		"role": "arn:aws:iam::822687513164:role/glue-role-ecommerce-pipeline",
		"command": "glueetl",
		"version": "5.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 10,
		"maxCapacity": 10,
		"jobRunQueuingEnabled": false,
		"maxRetries": 0,
		"timeout": 480,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "job_fact_purchases.py",
		"scriptLocation": "s3://aws-glue-assets-822687513164-eu-north-1/scripts/",
		"language": "python-3",
		"spark": true,
		"sparkConfiguration": "standard",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2025-07-14T06:33:34.248Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-822687513164-eu-north-1/temporary/",
		"glueHiveMetastore": true,
		"etlAutoTuning": true,
		"metrics": true,
		"observabilityMetrics": true,
		"bookmark": "job-bookmark-disable",
		"sparkPath": "s3://aws-glue-assets-822687513164-eu-north-1/sparkHistoryLogs/",
		"maintenanceWindow": null
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "\"\"\"\nGlue Job ‚Äì fact_purchases\nAuthor  : Milan Gabriel\nDate    : 2025-07-14\nDesc    : Create fact table from cleaned clickstream purchases,\n          with 'month' column for partitioning and analysis.\n\"\"\"\n\nfrom awsglue.context import GlueContext\nfrom awsglue.utils   import getResolvedOptions\nfrom awsglue.job     import Job\nfrom pyspark.context import SparkContext\nfrom pyspark.sql.functions import col, date_format\nimport sys\n\n# ‚îÄ‚îÄ Glue setup ‚îÄ‚îÄ\nargs  = getResolvedOptions(sys.argv, [\"JOB_NAME\"])\nsc    = SparkContext()\nglue  = GlueContext(sc)\nspark = glue.spark_session  # ‚úÖ make sure this is here before using spark\njob   = Job(glue)\njob.init(args[\"JOB_NAME\"], args)\n\n# 1Ô∏è‚É£  Read cleaned purchase data\nclean_df = spark.read.parquet(\"s3://ecommerce-pipeline-milan/clean/clickstream/purchases/\")\n\n# 2Ô∏è‚É£  Filter and derive month column\nfact_df = (\n    clean_df\n      .filter(col(\"event_time\").isNotNull() & col(\"user_id\").isNotNull())\n      .withColumn(\"month\", date_format(col(\"event_time\"), \"yyyy-MM\"))  # üÜï\n      .select(\n          col(\"event_time\"),\n          col(\"month\"),           # üÜï add month column\n          col(\"product_id\"),\n          col(\"category_id\"),\n          col(\"user_id\"),\n          col(\"price\"),\n          col(\"user_session\")\n      )\n)\n\n# 3Ô∏è‚É£  Write to fact table partitioned by month\n(\n    fact_df\n      .write\n      .mode(\"overwrite\")\n      .partitionBy(\"month\")  # üÜï improves performance\n      .parquet(\"s3://ecommerce-pipeline-milan/fact/purchases/\")\n)\n\n# ‚úÖ Finalize\njob.commit()"
}