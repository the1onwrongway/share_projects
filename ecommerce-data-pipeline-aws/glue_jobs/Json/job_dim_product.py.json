{
	"jobConfig": {
		"name": "job_dim_product.py",
		"description": "",
		"role": "arn:aws:iam::822687513164:role/glue-role-ecommerce-pipeline",
		"command": "glueetl",
		"version": "5.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 10,
		"maxCapacity": 10,
		"jobRunQueuingEnabled": false,
		"maxRetries": 0,
		"timeout": 480,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "job_dim_product.py",
		"scriptLocation": "s3://aws-glue-assets-822687513164-eu-north-1/scripts/",
		"language": "python-3",
		"spark": true,
		"sparkConfiguration": "standard",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2025-07-14T06:04:49.898Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-822687513164-eu-north-1/temporary/",
		"glueHiveMetastore": true,
		"etlAutoTuning": true,
		"metrics": true,
		"observabilityMetrics": true,
		"bookmark": "job-bookmark-disable",
		"sparkPath": "s3://aws-glue-assets-822687513164-eu-north-1/sparkHistoryLogs/",
		"maintenanceWindow": null
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "\"\"\"\nGlue Job – Create dim_product\nAuthor  : Milan Gabriel\nDate    : 2025-07-14\nDesc    : Extract unique product attributes from the cleaned\n          purchases fact set and store as a dimension table.\n\"\"\"\n\nfrom awsglue.context import GlueContext\nfrom awsglue.utils   import getResolvedOptions\nfrom awsglue.job     import Job\nfrom pyspark.context import SparkContext\nfrom pyspark.sql.functions import col\nimport sys\n\n# ── Glue boilerplate ──────────────────────────────────────────\nargs = getResolvedOptions(sys.argv, [\"JOB_NAME\"])\nsc   = SparkContext()\nglue = GlueContext(sc)\nspark = glue.spark_session\njob  = Job(glue)\njob.init(args[\"JOB_NAME\"], args)\n\n# 1️⃣  Read cleaned fact data\nfact_df = spark.read.parquet(\n    \"s3://ecommerce-pipeline-milan/clean/clickstream/purchases/\"\n)\n\n# 2️⃣  Build product dimension\ndim_product = (\n    fact_df\n      .select(\n          col(\"product_id\").cast(\"bigint\"),\n          col(\"category_id\").cast(\"bigint\"),\n          col(\"category_code\"),\n          col(\"brand\")\n      )\n      .distinct()\n)\n\n# 3️⃣  Write to S3\ndim_product.write.mode(\"overwrite\").parquet(\n    \"s3://ecommerce-pipeline-milan/dim/product/\"\n)\n\njob.commit()"
}