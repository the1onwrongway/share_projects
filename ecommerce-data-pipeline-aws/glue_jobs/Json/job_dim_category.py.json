{
	"jobConfig": {
		"name": "job_dim_category.py",
		"description": "",
		"role": "arn:aws:iam::822687513164:role/glue-role-ecommerce-pipeline",
		"command": "glueetl",
		"version": "5.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 10,
		"maxCapacity": 10,
		"jobRunQueuingEnabled": false,
		"maxRetries": 0,
		"timeout": 480,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "job_dim_category.py",
		"scriptLocation": "s3://aws-glue-assets-822687513164-eu-north-1/scripts/",
		"language": "python-3",
		"spark": true,
		"sparkConfiguration": "standard",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2025-07-14T06:37:36.040Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-822687513164-eu-north-1/temporary/",
		"glueHiveMetastore": true,
		"etlAutoTuning": true,
		"metrics": true,
		"observabilityMetrics": true,
		"bookmark": "job-bookmark-disable",
		"sparkPath": "s3://aws-glue-assets-822687513164-eu-north-1/sparkHistoryLogs/",
		"maintenanceWindow": null
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "\"\"\"\nGlue Job – dim_category\nAuthor : Milan Gabriel\nDate   : 2025-07-14\nDesc   : Build category dimension from category_code column.\n\"\"\"\n\nfrom awsglue.context import GlueContext\nfrom awsglue.utils import getResolvedOptions\nfrom awsglue.job import Job\nfrom pyspark.context import SparkContext\nfrom pyspark.sql.functions import col, split\nimport sys\n\n# ── Glue setup ──\nargs = getResolvedOptions(sys.argv, [\"JOB_NAME\"])\nsc   = SparkContext()\nglue = GlueContext(sc)\nspark = glue.spark_session\njob  = Job(glue)\njob.init(args[\"JOB_NAME\"], args)\n\n# 1️⃣ Load cleaned purchase data\ndf = spark.read.parquet(\"s3://ecommerce-pipeline-milan/clean/clickstream/purchases/\")\n\n# 2️⃣ Extract unique category codes\ndim_category = (\n    df\n    .select(\"category_id\", \"category_code\")\n    .dropna(subset=[\"category_id\", \"category_code\"])\n    .dropDuplicates([\"category_id\"])\n    .withColumn(\"main_category\", split(col(\"category_code\"), \"\\\\.\").getItem(0))\n    .withColumn(\"sub_category\",  split(col(\"category_code\"), \"\\\\.\").getItem(1))\n)\n\n# 3️⃣ Write to S3\ndim_category.write.mode(\"overwrite\").parquet(\"s3://ecommerce-pipeline-milan/dim/category/\")\n\njob.commit()"
}